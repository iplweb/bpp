name: 'Setup Frontend Environment'
description: 'Setup Node.js, Yarn, and build frontend assets'
inputs:
  build-assets:
    description: 'Whether to build assets after setup'
    required: false
    default: 'true'
  cache-assets:
    description: 'Whether to cache built assets'
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    - name: Setup Node.js
      shell: bash
      run: |
        curl -fsSL https://deb.nodesource.com/setup_current.x | sudo bash -
        sudo apt install -y nodejs
        sudo npm install -g --force yarn grunt-cli

    - name: Cache Yarn dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/yarn
          node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock', '**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Cache built assets
      if: inputs.cache-assets == 'true'
      uses: actions/cache@v4
      id: assets-cache
      with:
        path: |
          src/bpp/static/bpp/js/bpp.js
          src/bpp/static/bpp/css/
          staticroot/
        key: ${{ runner.os }}-assets-${{ hashFiles('**/yarn.lock', '**/package.json', '**/*.scss', '**/*.js', '!**/node_modules/**') }}
        restore-keys: |
          ${{ runner.os }}-assets-

    - name: Build frontend assets
      if: inputs.build-assets == 'true' && steps.assets-cache.outputs.cache-hit != 'true'
      shell: bash
      env:
        DJANGO_SETTINGS_MODULE: django_bpp.settings.local
        DJANGO_BPP_DB_HOST: ${{ env.DJANGO_BPP_DB_HOST || '127.0.0.1' }}
        DJANGO_BPP_DB_PORT: ${{ env.DJANGO_BPP_DB_PORT || '5433' }}
        DJANGO_BPP_DB_USER: ${{ env.DJANGO_BPP_DB_USER || 'postgres' }}
      run: |
        uv run make assets
