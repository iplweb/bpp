name: Testy - Django, Playwright

on:
  push:
    branches:
      - dev
      - master
      - feature/*
  pull_request:
    branches:
      - dev

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:

    runs-on: ubuntu-latest
    timeout-minutes: 45  # Add job-level timeout

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12,]

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      postgres:
        image: iplweb/bpp_dbserver:latest
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
        ports:
          - 5433:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd "pg_isready --username=postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python with Poetry caching
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'poetry'

    - name: Cache APT packages
      uses: actions/cache@v4
      with:
        path: /var/cache/apt/archives
        key: ${{ runner.os }}-apt-${{ hashFiles('.github/workflows/tests-no-selenium.yml') }}
        restore-keys: |
          ${{ runner.os }}-apt-

    - name: Cache Playwright browsers
      uses: actions/cache@v4
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-playwright-

    - name: Cache Yarn dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/yarn
          node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock', '**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: System setup and dependencies
      timeout-minutes: 10
      run: |
        set -e  # Exit on any error
        uname -a
        sudo apt update
        sudo apt install software-properties-common gettext
        curl -fsSL https://deb.nodesource.com/setup_current.x | sudo bash -
        sudo apt install -y python3 python3-dev libpq-dev nodejs redis-tools
        sudo npm install -g --force yarn grunt-cli

    - name: Install Python deps via poetry
      timeout-minutes: 10
      run: |
        python -m pip install pip poetry
        poetry install --with=dev
        poetry run playwright install chromium

    - name: Build assets (yarn, collectstatic)
      timeout-minutes: 10
      env:
        DJANGO_BPP_DB_HOST: 127.0.0.1
        DJANGO_BPP_DB_PORT: 5433
        DJANGO_BPP_DB_USER: postgres
      run: |
        poetry run make assets

    - name: Wait for services
      timeout-minutes: 2
      run: |
        # Wait for PostgreSQL to be ready
        until pg_isready -h 127.0.0.1 -p 5433 -U postgres; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done
        # Wait for Redis to be ready
        until redis-cli -h 127.0.0.1 -p 6379 ping; do
          echo "Waiting for Redis..."
          sleep 2
        done

    - name: Tests without Selenium (but include Playwright)
      timeout-minutes: 30
      env:
         DJANGO_BPP_DB_HOST: 127.0.0.1
         DJANGO_BPP_DB_PORT: 5433
         DJANGO_BPP_DB_USER: postgres
      run: |
         poetry run pytest -p no:pytest-splinter -m "not selenium" -n auto
