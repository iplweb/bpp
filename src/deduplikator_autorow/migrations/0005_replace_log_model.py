# Generated by Django 4.2.19 on 2025-09-04 21:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ("pbn_api", "0060_alter_osobazinstytucji_personid"),
        ("bpp", "0389_alter_uczelnia_uzywaj_wydzialow"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
        ("deduplikator_autorow", "0004_alter_notaduplicate_unique_together_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="LogScalania",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "duplicate_autor_str",
                    models.CharField(
                        help_text="Tekstowa reprezentacja usuniętego autora duplikatu",
                        max_length=500,
                        verbose_name="Autor duplikat (tekst)",
                    ),
                ),
                (
                    "duplicate_autor_id",
                    models.IntegerField(
                        help_text="ID usuniętego autora duplikatu (do celów audytu)",
                        verbose_name="ID autora duplikatu",
                    ),
                ),
                (
                    "object_id",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="ID rekordu"
                    ),
                ),
                (
                    "operation_type",
                    models.CharField(
                        choices=[
                            ("PUBLICATION_TRANSFER", "Przeniesienie publikacji"),
                            ("DISCIPLINE_TRANSFER", "Przeniesienie dyscypliny"),
                            ("DISCIPLINE_REMOVED", "Usunięcie dyscypliny"),
                            ("AUTHOR_DELETED", "Usunięcie autora"),
                        ],
                        max_length=50,
                        verbose_name="Typ operacji",
                    ),
                ),
                (
                    "operation_details",
                    models.TextField(
                        blank=True,
                        help_text="Dodatkowe informacje o operacji",
                        verbose_name="Szczegóły operacji",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Data utworzenia",
                    ),
                ),
                (
                    "publications_transferred",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Liczba przeniesionych publikacji"
                    ),
                ),
                (
                    "disciplines_transferred",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Liczba przeniesionych dyscyplin"
                    ),
                ),
                (
                    "warnings",
                    models.TextField(
                        blank=True,
                        help_text="Ostrzeżenia powstałe podczas scalania",
                        verbose_name="Ostrzeżenia",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="contenttypes.contenttype",
                        verbose_name="Typ rekordu",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="Użytkownik który wykonał scalanie",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Wykonał",
                    ),
                ),
                (
                    "duplicate_scientist",
                    models.ForeignKey(
                        blank=True,
                        help_text="Duplikat rekordu Scientist z PBN",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="merge_logs_as_duplicate_scientist",
                        to="pbn_api.scientist",
                        verbose_name="Duplikat Scientist (PBN)",
                    ),
                ),
                (
                    "dyscyplina_after",
                    models.ForeignKey(
                        blank=True,
                        help_text="Dyscyplina naukowa po scaleniu",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="merge_logs_after",
                        to="bpp.dyscyplina_naukowa",
                        verbose_name="Dyscyplina po",
                    ),
                ),
                (
                    "dyscyplina_before",
                    models.ForeignKey(
                        blank=True,
                        help_text="Dyscyplina naukowa przed scaleniem",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="merge_logs_before",
                        to="bpp.dyscyplina_naukowa",
                        verbose_name="Dyscyplina przed",
                    ),
                ),
                (
                    "main_autor",
                    models.ForeignKey(
                        help_text="Główny autor BPP do którego przypisano publikacje",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="merge_logs_as_main",
                        to="bpp.autor",
                        verbose_name="Autor główny (BPP)",
                    ),
                ),
                (
                    "main_scientist",
                    models.ForeignKey(
                        blank=True,
                        help_text="Główny rekord Scientist z PBN",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="merge_logs_as_main_scientist",
                        to="pbn_api.scientist",
                        verbose_name="Główny Scientist (PBN)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Log scalania autorów",
                "verbose_name_plural": "Logi scalania autorów",
                "ordering": ["-created_on"],
            },
        ),
        migrations.AlterModelOptions(
            name="notaduplicate",
            options={
                "ordering": ["-created_on"],
                "verbose_name": "Oznaczony jako nie-duplikat",
                "verbose_name_plural": "Oznaczeni jako nie-duplikaty",
            },
        ),
        migrations.DeleteModel(
            name="LogAutomatycznegoScalania",
        ),
        migrations.AddIndex(
            model_name="logscalania",
            index=models.Index(
                fields=["main_autor", "created_on"],
                name="deduplikato_main_au_f91c8d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="logscalania",
            index=models.Index(
                fields=["created_by", "created_on"],
                name="deduplikato_created_d972f2_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="logscalania",
            index=models.Index(
                fields=["operation_type", "created_on"],
                name="deduplikato_operati_364719_idx",
            ),
        ),
    ]
