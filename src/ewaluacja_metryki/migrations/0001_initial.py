# Generated by Django 4.2.19 on 2025-09-06 21:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("bpp", "0389_alter_uczelnia_uzywaj_wydzialow"),
    ]

    operations = [
        migrations.CreateModel(
            name="StatusGenerowania",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "data_rozpoczecia",
                    models.DateTimeField(
                        blank=True,
                        help_text="Data rozpoczęcia ostatniego generowania",
                        null=True,
                    ),
                ),
                (
                    "data_zakonczenia",
                    models.DateTimeField(
                        blank=True,
                        help_text="Data zakończenia ostatniego generowania",
                        null=True,
                    ),
                ),
                (
                    "w_trakcie",
                    models.BooleanField(
                        default=False, help_text="Czy generowanie jest w trakcie"
                    ),
                ),
                (
                    "liczba_przetworzonych",
                    models.IntegerField(
                        default=0, help_text="Liczba przetworzonych autorów"
                    ),
                ),
                (
                    "liczba_bledow",
                    models.IntegerField(
                        default=0, help_text="Liczba błędów podczas generowania"
                    ),
                ),
                (
                    "ostatni_komunikat",
                    models.TextField(
                        blank=True, help_text="Ostatni komunikat z procesu generowania"
                    ),
                ),
                (
                    "task_id",
                    models.CharField(
                        blank=True, help_text="ID zadania Celery", max_length=255
                    ),
                ),
            ],
            options={
                "verbose_name": "Status generowania metryk",
                "verbose_name_plural": "Status generowania metryk",
            },
        ),
        migrations.CreateModel(
            name="MetrykaAutora",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "slot_maksymalny",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="Maksymalny slot z IloscUdzialowDlaAutoraZaCalosc",
                        max_digits=10,
                    ),
                ),
                (
                    "slot_nazbierany",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="Suma slotów z algorytmu plecakowego",
                        max_digits=10,
                    ),
                ),
                (
                    "punkty_nazbierane",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="Suma punktów PKDaut z algorytmu plecakowego",
                        max_digits=10,
                    ),
                ),
                (
                    "prace_nazbierane",
                    models.JSONField(
                        default=list,
                        help_text="Lista ID prac z Cache_Punktacja_Autora_Query wybranych przez algorytm",
                    ),
                ),
                (
                    "srednia_za_slot_nazbierana",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        help_text="Średnia punktów PKDaut za slot (nazbierane)",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "slot_wszystkie",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="Suma slotów za wszystkie prace",
                        max_digits=10,
                    ),
                ),
                (
                    "punkty_wszystkie",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="Suma punktów PKDaut za wszystkie prace",
                        max_digits=10,
                    ),
                ),
                (
                    "prace_wszystkie",
                    models.JSONField(
                        default=list,
                        help_text="Lista wszystkich ID prac z Cache_Punktacja_Autora_Query",
                    ),
                ),
                (
                    "liczba_prac_wszystkie",
                    models.IntegerField(
                        default=0, help_text="Liczba wszystkich prac autora w okresie"
                    ),
                ),
                (
                    "srednia_za_slot_wszystkie",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        help_text="Średnia punktów PKDaut za slot (wszystkie)",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "procent_wykorzystania_slotow",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Procent wykorzystania slotów (nazbierane/maksymalny * 100)",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "data_obliczenia",
                    models.DateTimeField(
                        auto_now=True, help_text="Data ostatniego przeliczenia metryk"
                    ),
                ),
                (
                    "rok_min",
                    models.IntegerField(
                        default=2022, help_text="Początkowy rok okresu ewaluacji"
                    ),
                ),
                (
                    "rok_max",
                    models.IntegerField(
                        default=2025, help_text="Końcowy rok okresu ewaluacji"
                    ),
                ),
                (
                    "autor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="metryki",
                        to="bpp.autor",
                    ),
                ),
                (
                    "dyscyplina_naukowa",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="bpp.dyscyplina_naukowa",
                    ),
                ),
                (
                    "jednostka",
                    models.ForeignKey(
                        blank=True,
                        help_text="Główna jednostka autora w okresie ewaluacji",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="bpp.jednostka",
                    ),
                ),
            ],
            options={
                "verbose_name": "Metryka autora",
                "verbose_name_plural": "Metryki autorów",
                "ordering": [
                    "-srednia_za_slot_nazbierana",
                    "autor__nazwisko",
                    "autor__imiona",
                ],
                "indexes": [
                    models.Index(
                        fields=["-srednia_za_slot_nazbierana"],
                        name="ewaluacja_m_srednia_f39e21_idx",
                    ),
                    models.Index(
                        fields=["jednostka", "-srednia_za_slot_nazbierana"],
                        name="ewaluacja_m_jednost_7cbd08_idx",
                    ),
                    models.Index(
                        fields=["dyscyplina_naukowa", "-srednia_za_slot_nazbierana"],
                        name="ewaluacja_m_dyscypl_af1913_idx",
                    ),
                ],
                "unique_together": {("autor", "dyscyplina_naukowa")},
            },
        ),
    ]
