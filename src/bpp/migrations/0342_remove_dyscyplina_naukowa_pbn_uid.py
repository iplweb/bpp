# Generated by Django 4.2.5 on 2023-11-10 14:39
import warnings

from django.db import migrations


def zamapuj_aktualne_wpisy_tlumacza_dyscyplin(apps, schema_editor):
    """
    Zakładając, że na tym etapie migracji bpp.Dyscyplina_Naukowa posiada pbn_uid czyli
    odpowiednik w PBN, to zakładamy też, że jest to aktualny, obecny odpowiednik z aktualnego
    słownika dyscyplin. Zatem ustawimy go jako początkowy wpis w tlumaczu dyscyplin.

    Wpisy za okres nieaktualny 2017-2021 utworzy oddzielna procedura.
    """
    Dyscyplina_Naukowa = apps.get_model("bpp", "Dyscyplina_Naukowa")
    TlumaczDyscyplin = apps.get_model("pbn_api", "TlumaczDyscyplin")

    for dyscyplina_naukowa in Dyscyplina_Naukowa.objects.all():
        if dyscyplina_naukowa.pbn_uid_id is not None:
            TlumaczDyscyplin.objects.get_or_create(
                dyscyplina_w_bpp=dyscyplina_naukowa,
                pbn_2022_now=dyscyplina_naukowa.pbn_uid,
            )


def zamapuj_nieaktualne_wpisy_tlumacza_dyscyplin(apps, schema_editor):
    """Na tym etapie migracji TlumaczDyscyplin został pouzupełniany na podstawie
    procedury ``zamapuj_aktualne_wpisy_tlumacza_dyscyplin`` . Pozostały do uzupełnienia
    wpisy za okres 2017-2021, czyli te z nieaktualnego słownika."""

    TlumaczDyscyplin = apps.get_model("pbn_api", "TlumaczDyscyplin")
    Discipline = apps.get_model("pbn_api", "Discipline")
    DisciplineGroup = apps.get_model("pbn_api", "DisciplineGroup")

    nieaktualny_slownik_1822 = DisciplineGroup.objects.filter(
        validityDateFrom__year=2018, validityDateTo__year=2022
    ).first()

    for tlumacz_dyscyplin in TlumaczDyscyplin.objects.filter(pbn_2017_2021=None):
        nazwa_aktualnej_dyscypliny = tlumacz_dyscyplin.dyscyplina_w_bpp.nazwa

        kod_aktualnej_dyscypliny = tlumacz_dyscyplin.dyscyplina_w_bpp.kod
        a, b = (int(x) for x in kod_aktualnej_dyscypliny.split(".", 1))
        kod_dla_pbn = int("%i%.2i" % (a, b))

        stara_dyscyplina = Discipline.objects.filter(
            name=nazwa_aktualnej_dyscypliny, parent_group=nieaktualny_slownik_1822
        )

        if stara_dyscyplina.count != 1:
            stara_dyscyplina = Discipline.objects.filter(
                code=kod_dla_pbn, parent_group=nieaktualny_slownik_1822
            )

            if stara_dyscyplina.count() != 1:
                warnings.warn(
                    "Brak możliwości ustalenia dyscypliny w PBN za okres 2018-2022 dla "
                    f"dyscypliny {tlumacz_dyscyplin.dyscyplina_w_bpp.nazwa}. Wyedytuj ręcznie "
                    f"wpis Tłumacza Dyscyplin w module redagowanie w zakładce PBN API. Chyba, "
                    f"że jest to dyscyplina z nowego słownika, w tej sytuacji -- wszystko w porządku. "
                )
                continue

        tlumacz_dyscyplin.pbn_2017_2021 = stara_dyscyplina.first()
        tlumacz_dyscyplin.save()


class Migration(migrations.Migration):
    dependencies = [
        ("bpp", "0341_dyscyplina_naukowa_pbn_uid"),
        ("pbn_api", "0040_tlumaczdyscyplinmanager"),
    ]
    operations = [
        migrations.RunPython(
            zamapuj_aktualne_wpisy_tlumacza_dyscyplin, migrations.RunPython.noop
        ),
        migrations.RemoveField(
            model_name="dyscyplina_naukowa",
            name="pbn_uid",
        ),
        migrations.RunPython(
            zamapuj_nieaktualne_wpisy_tlumacza_dyscyplin, migrations.RunPython.noop
        ),
    ]
