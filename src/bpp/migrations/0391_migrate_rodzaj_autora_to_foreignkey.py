# Generated by Django 4.2.25 on 2025-10-13 15:37

import django.db.models.deletion
from django.db import migrations, models


def migrate_rodzaj_autora_to_foreignkey(apps, schema_editor):
    Autor_Dyscyplina = apps.get_model("bpp", "Autor_Dyscyplina")
    Rodzaj_Autora = apps.get_model("ewaluacja_common", "Rodzaj_Autora")

    # Map old skrot values to new Rodzaj_Autora objects
    skrot_to_rodzaj = {
        "N": Rodzaj_Autora.objects.get(skrot="N"),
        "D": Rodzaj_Autora.objects.get(skrot="D"),
        "B": Rodzaj_Autora.objects.get(skrot="B"),
        "Z": Rodzaj_Autora.objects.get(skrot="Z"),
        " ": None,  # brak danych
    }

    # Update all Autor_Dyscyplina records
    for ad in Autor_Dyscyplina.objects.all():
        if ad.rodzaj_autora in skrot_to_rodzaj:
            ad.rodzaj_autora_new = skrot_to_rodzaj[ad.rodzaj_autora]
            ad.save()


def reverse_migrate_rodzaj_autora_to_foreignkey(apps, schema_editor):
    Autor_Dyscyplina = apps.get_model("bpp", "Autor_Dyscyplina")
    Rodzaj_Autora = apps.get_model("ewaluacja_common", "Rodzaj_Autora")

    # Map Rodzaj_Autora objects back to skrot values
    rodzaj_to_skrot = {}
    for ra in Rodzaj_Autora.objects.all():
        rodzaj_to_skrot[ra.pk] = ra.skrot

    # Update all Autor_Dyscyplina records
    for ad in Autor_Dyscyplina.objects.all():
        if ad.rodzaj_autora_new_id in rodzaj_to_skrot:
            ad.rodzaj_autora = rodzaj_to_skrot[ad.rodzaj_autora_new_id]
            ad.save()


class Migration(migrations.Migration):

    dependencies = [
        ("ewaluacja_common", "0002_populate_rodzaje_autorow"),
        ("bpp", "0390_add_filters_to_sumy_view"),
    ]

    operations = [
        # Add new ForeignKey field
        migrations.AddField(
            model_name="autor_dyscyplina",
            name="rodzaj_autora_new",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="autor_dyscyplina_new",
                to="ewaluacja_common.rodzaj_autora",
                verbose_name="Rodzaj autora",
            ),
        ),
        # Migrate data from old field to new field
        migrations.RunPython(
            migrate_rodzaj_autora_to_foreignkey,
            reverse_migrate_rodzaj_autora_to_foreignkey,
        ),
        # Remove old field
        migrations.RemoveField(
            model_name="autor_dyscyplina",
            name="rodzaj_autora",
        ),
        # Rename new field to original name
        migrations.RenameField(
            model_name="autor_dyscyplina",
            old_name="rodzaj_autora_new",
            new_name="rodzaj_autora",
        ),
    ]
