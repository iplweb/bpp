- name: Group for django site is present
  group: name={{ django_group }}

- name: User for django site is present
  user: name={{ django_user  }} createhome=yes

- name: Media dir for django site is present
  file: path={{ django_media_root }} state=directory owner={{ django_user }} mode=0755

- name: Basic django requirements are installed
  apt: name={{ item }}
  with_items:
    - python-virtualenv
    - zip # jest wymagany

- name: Last version of sources is known
  local_action: shell python ../src/{{ django_project_name }}/version.py
  register: django_latest_version_discovery_command
  sudo: false
  tags: ['django-depends', 'django-migrate', 'supervisor', 'nginx', 'cron', 'sync']

- name: Ansible fact for latest version of sources is set
  set_fact: django_latest_version={{ django_latest_version_discovery_command.stdout }}
  tags: ['django-depends', 'django-migrate', 'supervisor', 'nginx', 'cron', 'sync']

- name: Wheel repository is synchronized
  synchronize:
    src: ../dist/
    dest: "{{django_home_dir}}/dist"
    delete: yes
    archive: no
    compress: no
    checksum: yes
    recursive: yes
    times: yes
    rsync_opts:
      - "--exclude-from=../rsync.exclude"
  tags: ['sync']
  notify: 
    - supervisor restart

- name: Virtualenv is created
  command: virtualenv --python=python{{ django_python_version }} {{ django_venv_dir }}
  sudo_user: "{{ django_user }}"
  args:
    creates: "{{ django_venv_dir }}"

- name: Virtualenv wrapper for execution of scripts is created
  template: src=vexec dest={{ django_home_dir }}/vexec mode=755
  sudo_user: "{{ django_user }}"

- name: Pip is upgraded in virtualenv
  command: "{{ django_home_dir }}/vexec pip install --upgrade pip"
  sudo_user: "{{ django_user }}"

- name: Wheel is installed in virtual environment
  pip: virtualenv={{ django_venv_dir }} name=wheel
  sudo_user: "{{ django_user }}"

- include: config.yml
  tags: ['config']

- name: django-bpp package is installed
  command: "{{ django_home_dir }}/vexec pip install --no-index django-bpp=={{django_latest_version}} --find-links=file://{{ django_home_dir }}/dist"
  sudo_user: "{{ django_user }}"
  tags: ['django-depends']

- name: Database is migrated
  command: "{{ django_manage_py }} migrate --noinput"
  tags: ['django-migrate']

- name: Site name for sites framework is set up
  command: "{{ django_manage_py }} set_site_name --domain \"{{ django_hostname }}\" --name \"{{ django_site_name }}\""

- include: supervisor.yml
  tags: ['supervisor',]

- include: nginx.yml
  tags: ['nginx',]

- name: RabbitMQ config jest dodany do {{ django_venv_dir }}/bin/activate
  no_log: True
  lineinfile: dest="{{ django_venv_dir }}/bin/activate" line="{{ item }}"
  with_items:
    - export {{ django_envvar_prefix }}_BROKER_URL="amqp://{{ rabbitmq_user }}:{{ rabbitmq_password }}@localhost:5672/{{ rabbitmq_vhost }}"
  notify:
    - supervisor restart
  tags: ['django-site', 'rabbitmq']

- name: Cron restartuje supervisord raz dziennie
  cron: name="Restartuj procesy supervisord raz dziennie" minute="30" hour="23" job="supervisorctl restart all > /dev/null"
  tags: ['cron',]

- name: Przebudowa cache bazy danych raz dziennie
  cron: name="Przebuduj cache bazy danych raz dziennie" minute="30" hour="2" job="{{ django_manage_py }} rebuild_cache"
  tags: ['cron',]
  sudo_user: "{{ django_user }}"
