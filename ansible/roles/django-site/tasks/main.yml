- name: Group for django site is present
  group: name={{ django_group }}

- name: User for django site is present
  user: name={{ django_user  }} createhome=yes

- name: Media dir for django site is present
  file: path={{ django_media_root }} state=directory owner={{ django_user }} mode=0755

- name: Basic django requirements are installed
  apt: name={{ item }}
  with_items:
    - python-virtualenv
    - python{{django_python_version}}-dev
    - zip # jest wymagany
    - pandoc
    - memcached

- name: Last version of sources is known
  local_action: shell python ../src/{{ django_project_name }}/version.py
  register: django_latest_version_discovery_command
  become: false
  tags: ['django-depends', 'django-migrate', 'supervisor', 'nginx', 'cron', 'sync']

- name: Ansible fact for latest version of sources is set
  set_fact: django_latest_version={{ django_latest_version_discovery_command.stdout }}
  tags: ['django-depends', 'django-migrate', 'supervisor', 'nginx', 'cron', 'sync']

- name: Virtualenv is created
  command: virtualenv --python=python{{ django_python_version }} {{ django_venv_dir }}
  become_user: "{{ django_user }}"
  args:
    creates: "{{ django_venv_dir }}"

- name: Virtualenv wrapper for execution of scripts is created
  template: src=vexec dest={{ django_home_dir }}/vexec mode=755
  become_user: "{{ django_user }}"

- name: Pip is upgraded in virtualenv
  command: "{{ django_home_dir }}/vexec pip install --upgrade pip"
  become_user: "{{ django_user }}"

- name: Wheel is installed in virtual environment
  pip: virtualenv={{ django_venv_dir }} name=wheel
  become_user: "{{ django_user }}"

- include: config.yml
  tags: ['config']

- name: BPP package is installed
  command: "{{ django_home_dir }}/vexec pip install --extra-index-url http://dev.iplweb.pl:8080/ --trusted-host dev.iplweb.pl bpp-iplweb=={{django_latest_version}}"
  become_user: "{{ django_user }}"
  tags: ['django-depends']

- name: Database is migrated
  command: "{{ django_manage_py }} migrate --noinput"
  tags: ['django-migrate']

- name: Site name for sites framework is set up
  command: "{{ django_manage_py }} set_site_name --domain \"{{ django_hostname }}\" --name \"{{ django_site_name }}\""

- include: supervisor.yml
  tags: ['supervisor',]

- include: nginx.yml
  tags: ['nginx',]

- name: RabbitMQ config jest dodany do {{ django_venv_dir }}/bin/activate
  no_log: True
  lineinfile: dest="{{ django_venv_dir }}/bin/activate" line="{{ item }}"
  with_items:
    - export {{ django_envvar_prefix }}_BROKER_URL="amqp://{{ rabbitmq_user }}:{{ rabbitmq_password }}@localhost:5672/{{ rabbitmq_vhost }}"
  tags: ['django-site', 'rabbitmq']

- include: cron.yml
  tags: ['cron',]

- name: Check if any processess running
  shell: supervisorctl status {{ supervisor_group_name }}:* | grep RUNNING | wc -l
  register: supervisor_processess_running
  tags: ['supervisor',]

- name: Send HUP signal to running processess
  shell: supervisorctl signal HUP {{ supervisor_group_name }}:*
  when: supervisor_processess_running.stdout|int == supervisor_no_processess
  tags: ['supervisor',]

- name: Restart supervisor if different number of running procs
  shell: ls
  notify: supervisor restart group
  when: supervisor_processess_running.stdout|int != supervisor_no_processess
  tags: ['supervisor',]
