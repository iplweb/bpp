# ============================================================================
# UPSTREAM CONFIGURATION
# ============================================================================
# Defines the backend application server pool for load balancing
upstream appserver_bpp {
    server appserver:8000;
}

# ============================================================================
# HTTP SERVER BLOCKS
# ============================================================================

# Catch-all server block for HTTP traffic with unknown hostnames
# Drops connections with 444 (no response) to prevent access to invalid hostnames
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    server_name _;

    access_log off;
    error_log /dev/null;
    return 444;
}

# HTTP to HTTPS redirect server block
# Redirects all legitimate HTTP traffic to HTTPS with proper hostname
server {
    listen 80;
    listen [::]:80;

    server_name ${DJANGO_BPP_HOSTNAME};
    return 301 https://$host$request_uri;
}

# ============================================================================
# HTTPS SERVER BLOCKS
# ============================================================================

# Catch-all server block for HTTPS traffic with unknown hostnames
# Rejects SSL handshake for invalid hostnames to prevent serving content to wrong domains
server {
    listen 443 ssl default_server;
    server_name _;
    ssl_reject_handshake on;
    access_log off;
    error_log /dev/null;
}

# Main HTTPS server block for the BPP application
# Handles all legitimate HTTPS traffic and serves the Django application
server {
    client_max_body_size 100M;

    listen 443 ssl;
    server_name ${DJANGO_BPP_HOSTNAME};

    # ============================================================================
    # ERROR PAGES CONFIGURATION
    # ============================================================================
    # Custom error pages for better user experience
    error_page 500 /static/500.html;
    error_page 502 503 504 /maintenance.html;
    location = /maintenance.html {
        root /usr/share/nginx/html;
        internal;
    }

    # ============================================================================
    # MAIN APPLICATION ROUTING
    # ============================================================================
    # Try to serve static files directly, otherwise proxy to Django app
    location / {
        try_files $uri @proxy_to_app;
    }

    # Metrics endpoint - BLOCKED from everywhere
    # Prevents external access to Prometheus metrics
    location = /metrics {
        deny all;
        access_log off;
        return 403;
    }

    # ============================================================================
    # PROXY CONFIGURATION
    # ============================================================================
    # Proxy configuration for Django application with WebSocket support
    location @proxy_to_app {
        proxy_pass http://appserver_bpp;

        # HTTP/1.1 and WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Forward client information to Django
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header Referer $http_referer;

        # Timeouts for long-running operations (reports, imports, etc.)
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;

        # Buffer settings for optimal performance
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;

        proxy_redirect off;
    }

    # ============================================================================
    # SECURITY BLOCKS
    # ============================================================================

    # Block access to hidden files and directories
    # Prevents access to .git, .env, and other hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block access to backup and source files
    # Prevents access to configuration files, backups, and source code
    location ~* \.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist|git|gitignore|dockerignore|env)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block URLs containing {{clickURL}} template strings (case-insensitive)
    # Prevents bots from accessing JavaScript template strings as URLs
    location ~* \{\{\s*[cC][lL][iI][cC][kK][uU][rR][lL]\s*\}\} {
        access_log off;
        error_log /dev/null;
        return 444;
    }

    # ============================================================================
    # BASIC SERVER CONFIGURATION
    # ============================================================================
    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;

    # ============================================================================
    # STATIC FILES CONFIGURATION
    # ============================================================================
    # Serves Django static files with aggressive caching for performance
    location /static/ {
        alias /var/www/html/staticroot/;
        expires 30d;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff" always;

        # Extended caching for static assets that rarely change
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Performance optimizations
        sendfile on;
        sendfile_max_chunk 1m;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
    }

    # ============================================================================
    # MEDIA FILES CONFIGURATION
    # ============================================================================
    # Serves user-uploaded media files with moderate caching
    location /media/ {
        alias /mediaroot/;
        expires 7d;
        add_header Cache-Control "public";
        add_header X-Content-Type-Options "nosniff" always;

        # Prevent execution of uploaded files for security
        location ~* \.(php|php3|php4|php5|php7|phtml|pl|py|pyc|pyo|sh|cgi|rb|asp|aspx|exe|com|bat|dll|vbs|js|jar|jsp|jspx)$ {
            deny all;
        }
    }

    # ============================================================================
    # SSL CONFIGURATION
    # ============================================================================
    # SSL certificate configuration for HTTPS
    ssl_certificate /etc/ssl/private/cert.pem;
    ssl_certificate_key /etc/ssl/private/key.pem;
    ssl_session_timeout 30m;

    # ============================================================================
    # COMPRESSION CONFIGURATION
    # ============================================================================
    # Gzip compression for better performance
    gzip on;
    gzip_static on;
    gzip_min_length 1000;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css application/json application/x-javascript application/javascript text/xml application/xml application/xml+rss text/javascript;
}
