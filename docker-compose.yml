services:
  db:
    image: iplweb/bpp_dbserver:202405.1128
    volumes:
      - postgresql_data:/var/lib/postgresql/data

  appserver:
    image: iplweb/bpp_appserver:202405.1128
    restart: always
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    environment:
      DEBUG: false
      DJANGO_BPP_DB_HOST: db
      DJANGO_BPP_DB_USER: postgres
      DJANGO_BPP_DB_NAME: bpp
      DJANGO_BPP_REDIS_HOST: redis
      DJANGO_BPP_HOSTNAME: localhost
      DJANGO_SETTINGS_MODULE: django_bpp.settings.local
      WEB_CONCURRENCY: 8
    volumes:
      - staticfiles:/staticroot
      - media:/mediaroot

  workserver:
    image: iplweb/bpp_workerserver:202405.1128
    depends_on:
      - redis
      - appserver

  denormserver:
    image: iplweb/bpp_appserver:202405.1128
    env_file: .env
    entrypoint: ["python", "src/manage.py", "denorm_queue"]
    deploy:
      mode: replicated
      replicas: 4
    restart: always
    depends_on:
      - redis
      - dbserver

  webserver:
    image: iplweb/bpp_webserver:202405.1128
    restart: always
    depends_on:
      - redis
      - appserver
    ports:
      - 80:80
      - 443:443
    volumes:
      - staticfiles:/var/www/html/staticroot
    secrets:
      - key.pem
      - cert.pem

  redis:
    image: redis:latest

secrets:
  key.pem:
    file: ./deploy/webserver/key.pem
  cert.pem:
    file: ./deploy/webserver/cert.pem

volumes:
  staticfiles:
  media:
  postgresql_data:
