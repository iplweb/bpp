version: 2
jobs:
  build:

    docker:
      - image: mpasternak79/circleci-python:3.7-node-browsers-nginx-http-push
        environment:
          PGUSER: postgres
          PGHOST: localhost
          PGPORT: 5432
          PGDATABASE: bpp
          DJANGO_BPP_SECRET_KEY: foobar
          DJANGO_SETTINGS_MODULE: django_bpp.settings.test
      - image: mpasternak79/circleci-postgres:12
      - image: rabbitmq:latest
        
    steps:
      - checkout

      - restore_cache:
          user: root
          key: cache-3-{{ checksum "requirements.txt" }}-{{ checksum "requirements_dev.txt" }}
          
      - run: sudo find /root/

      - run: sudo npm install -g grunt-cli
      - run: sudo pip install --upgrade pip
      - run: sudo pip install -r requirements.txt -r requirements_dev.txt --quiet

      - run: sudo chown -Rv 777 /root
      - run: sudo du -h /root/.cache/pip

      - save_cache: # cache Python dependencies using checksum of Pipfile as the cache-key
          key: cache-3-{{ checksum "requirements.txt" }}-{{ checksum "requirements_dev.txt" }}
          user: root
          paths:
            - "/root/.cache"

      - run: make assets
        
      # # Uruchamiaj na lokalnym firefoxie używając jednego CPU
      # - run: pytest -n 2 --cov=src --splinter-webdriver=firefox  --nginx-host=localhost --liveserver=localhost 

      # # Testy JavaScript
      # - run: make js-tests

      # # Wyślij statystyki pokrycia kodu testami do coveralls.io  
      # - run: coveralls

      # # Skonfiguruj PyPI
      # - run:
      #     name: init .pypirc
      #     command: |
      #       echo -e "[pypi]" > ~/.pypirc
      #       echo -e "repository = https://upload.pypi.org/legacy/" >> ~/.pypirc
      #       echo -e "username = dotz" >> ~/.pypirc
      #       echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      # # Zbuduj pakiet
      # - run:
      #     name: create and upload packages -- only on MASTER
      #     command: |
      #       if [ $CIRCLE_BRANCH = 'master' ]; then make bdist_wheel_upload; fi
