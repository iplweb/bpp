version: 2
jobs:
  build:

    # branches:
    #   only:
    #     - master
    #     - dev

    docker:
      - image: circleci/python:3.8-node-browsers
        environment:
          PGUSER: postgres
          PGHOST: localhost
          PGPORT: 5432
          PGDATABASE: bpp
          DJANGO_BPP_SECRET_KEY: foobar
          DJANGO_SETTINGS_MODULE: django_bpp.settings.test
      - image: mpasternak79/circleci-postgres:12
        environment:
          POSTGRESS_PASSWORD: password
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: redis:latest

    steps:
      - setup_remote_docker

      - run:
          name: install postgresql-client
          command: |
            sudo apt install -y postgresql-client

      - run:
          name: create database
          command: |
            createdb bpp

      - checkout

      - run: sudo apt --quiet install -y --quiet gettext locales
      - run: sudo sed -i 's/^# *\(pl_PL.UTF-8\)/\1/' /etc/locale.gen
      - run: sudo locale-gen
      - run: sudo sh -c 'LANG=pl_PL.UTF-8 > /etc/default/locale'
      - run: export LC_ALL=pl_PL.UTF-8
      - run: locale
      - run: sudo npm install -g grunt-cli
      - run: sudo pip install --upgrade pip
      - run: sudo pip install pipx

      - run:
          name: Install Poetry
          command: |
            pipx install poetry

      - run:
          name: Install project
          command: |
            poetry --quiet install --no-root

      - run:
          name: migrate database
          command: |
            poetry run src/manage.py migrate

      - run:
          name: make assets
          command: |
            poetry run make assets

      # Sklonuj bazy danych, zeby było kapke szybciej
      - run:
          name: clone bpp to testing databases gw0, gw1
          command: |
            createdb test_bpp_gw0 -T bpp
            createdb test_bpp_gw1 -T bpp

      # Uruchamiaj na lokalnym firefoxie używając dwóch CPU
      - run:
          name: pytest
          command: |
            poetry run pytest -d -n 2 --splinter-headless --cov=src --ds=django_bpp.settings.test

      # Testy JavaScript
      - run: make js-tests

      # Wyślij statystyki pokrycia kodu testami do coveralls.io
      - run:
          name: Submit coverage to coveralls.io
          command: |
            . venv/bin/activate
            coveralls

      # Zbuduj pakiet WHL -- bez wrzucania go na serwer (próbnie)
      - run:
          name: Build packages
          command: |
            make bdist_wheel
